---
type Props = {
  defaultTheme?: "auto" | "light" | "dark";
};

const { defaultTheme = "auto" } = Astro.props;
---

<script is:inline data-default-theme={defaultTheme}>
  window.theme ??= (() => {
    const defaultTheme = document.currentScript?.getAttribute("data-default-theme") ?? "auto";

    const mediaMatcher = window.matchMedia("(prefers-color-scheme: light)");
    let systemTheme = mediaMatcher.matches ? "light" : "dark";
    mediaMatcher.addEventListener("change", (event) => {
      systemTheme = event.matches ? "light" : "dark";
      document.documentElement.dataset.theme =
        window.theme.getTheme() === "auto" ? systemTheme : window.theme.getTheme();
    });

    function setTheme(theme = defaultTheme) {
      window.localStorage.setItem("theme", theme);
      document.documentElement.dataset.theme = theme === "auto" ? systemTheme : theme;
    }

    function getTheme() {
      return window.localStorage.getItem("theme") ?? defaultTheme;
    }

    return { setTheme, getTheme, systemTheme, defaultTheme };
  })();

  window.theme.setTheme(window.theme.getTheme());
</script>

<script>
  document.addEventListener("astro:after-swap", () => window.theme.setTheme(window.theme.getTheme()));
</script>
