---
import { getEntry, render } from "astro:content";
import Clap from "@assets/clap.svg";
import BaseLayout from "@components/BaseLayout.astro";
import { Share } from "@components/Share";
import { Avatar } from "@ui/Avatar";
import { Button } from "@ui/Button";
import { Heading } from "@ui/Heading";
import { Strong, TextLink } from "@ui/Text";

if (!Astro.params.id) return Astro.redirect("/404");
const post = await getEntry("blog", Astro.params.id);
if (!post) return Astro.redirect("/404");
const { Content } = await render(post);
---

<BaseLayout author={post.data.author} description={post.data.description} title={post.data.title}>
  <main class="px-4 sm:px-6 md:px-8">
    <article class="mx-auto max-w-3xl">
      <section class="flex flex-col gap-y-3 pb-12 pt-16">
        <p class="flex text-base/7 text-zinc-500 dark:text-zinc-400">
          <time datetime={post.data.publishedAt.toISOString()}>
            {
              post.data.publishedAt.toLocaleDateString("en-US", {
                weekday: "long",
                year: "numeric",
                month: "long",
                day: "numeric",
              })
            }
          </time>
          {post.data.updatedAt &&
            <span class="italic">&nbsp;â€” Edited:&nbsp;</span>
            <time class="italic" datetime={post.data.updatedAt.toISOString()}>
              {
                post.data.updatedAt.toLocaleDateString("en-US", {
                  year: "numeric",
                  month: "long",
                  day: "numeric",
                })
              }
            </time>
          }
        </p>
        <Heading className="mb-2 text-3xl font-extrabold tracking-tight">{post.data.title}</Heading>
        <div class="flex items-center justify-between">
          <ul class="flex items-center gap-x-6">
            <li>
              <Avatar className="w-10" src={post.data.authorAvatar} />
            </li>
            <li class="flex flex-col">
              <Strong>{post.data.author}</Strong>
              <TextLink href={post.data.authorLink}>{post.data.authorAt}</TextLink>
            </li>
          </ul>
          <div class="flex items-center gap-x-4">
            <Button aria-label="like" client:visible plain>
              <Clap class="size-5" aria-hidden />
            </Button>
            <Share client:only="react" />
          </div>
        </div>
      </section>
      <section id="content">
        <Content />
      </section>
    </article>
  </main>
</BaseLayout>

<style>
  #content {
    h2, h3, h4, h5, h6 {
      margin-bottom: calc(var(--spacing) * 2);
      font-weight: var(--font-weight-semibold);
      color: var(--color-zinc-900);
      white-space: pre-wrap;
      line-height: var(--leading-loose);
      &:is([data-theme="dark"] *) {
        color: var(--color-white);
      }
    }
    h2 {
      font-size: var(--text-2xl);
      line-height: var(--tw-leading, var(--text-2xl--line-height));
    }
    h3 {
      font-size: var(--text-xl);
      line-height: var(--tw-leading, var(--text-xl--line-height));
    }
    a {
      color: var(--color-zinc-950);
      text-decoration-line: underline;
      text-decoration-color: color-mix(in oklab, var(--color-zinc-950) 50%, transparent);
      outline: 2px solid transparent;
      outline-offset: 2px;
      &:hover {
        @media (hover: hover) {
          text-decoration-color: var(--color-zinc-950);
        }
      }
      &:focus {
        --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentColor);
        --tw-ring-color: var(--color-sky-500);
        box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
      }
      &:is([data-theme="dark"] *) {
        color: var(--color-white);
        text-decoration-color: color-mix(in oklab, var(--color-white) 50%, transparent);
        &:hover {
          @media (hover: hover) {
            text-decoration-color: var(--color-white);
          }
        }
      }
    }
    p {
      font-size: var(--text-base);
      line-height: calc(var(--spacing) * 7);
      color: var(--color-zinc-600);
      &:is([data-theme="dark"] *) {
        color: var(--color-zinc-400);
      }
    }
    strong {
      font-weight: var(--font-weight-medium);
      color: var(--color-zinc-950);
      &:is([data-theme="dark"] *) {
        color: var(--color-white);
      }
    }
    ul {
      padding: calc(var(--spacing) * 5);
      list-style-type: disc;
      list-style-position: inside;
    }
    li {
      font-size: var(--text-base);
      line-height: calc(var(--spacing) * 7);
      color: var(--color-zinc-500);
      & *::marker {
        color: var(--color-black);
      }
      &::marker {
        color: var(--color-black);
      }
      &:is([data-theme="dark"] *) {
        color: var(--color-zinc-400);
        & *::marker {
          color: var(--color-white);
        }
        &::marker {
          color: var(--color-white);
        }
      }
    }
    blockquote p {
      padding: calc(var(--spacing) * 4);
      border-color: var(--color-zinc-300);
      border-left-style: var(--tw-border-style);
      border-left-width: 3px;
    }
    hr {
      margin-top: calc(var(--spacing) * 12);
      margin-bottom: calc(var(--spacing) * 10);
      border-style: var(--tw-border-style);
      border-width: 1px;
      border-color: color-mix(in oklab, var(--color-zinc-950) 10%, transparent);
      &:is([data-theme="dark"] *) {
        border-color: color-mix(in oklab, var(--color-white) 20%, transparent);
      }
    }
    pre {
      margin-block: calc(var(--spacing) * 8);
      border-style: var(--tw-border-style);
      border-width: 1px;
      padding: calc(var(--spacing) * 4);
      font-size: var(--text-base);
      line-height: calc(var(--spacing) * 6);
      border-radius: var(--radius-md);
      outline: 2px solid transparent;
      outline-offset: 2px;
      &:focus {
        --tw-ring-color: var(--color-sky-500);
        --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentColor);
        box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
      }
      &:is([data-theme="dark"] *) {
        border-color: color-mix(in oklab, var(--color-white) 20%, transparent);
      }
    }
  }
</style>
